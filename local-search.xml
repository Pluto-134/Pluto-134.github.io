<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/12/10/Deep%20Learning/"/>
    <url>/2023/12/10/Deep%20Learning/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/12/10/Data%20System/"/>
    <url>/2023/12/10/Data%20System/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu</title>
    <link href="/2023/12/10/Ubuntu/"/>
    <url>/2023/12/10/Ubuntu/</url>
    
    <content type="html"><![CDATA[<h3 id="打开Terminal"><a href="#打开Terminal" class="headerlink" title="打开Terminal"></a>打开Terminal</h3><ol><li>右键点击桌面，选择“open in terminal”</li><li>Ctrl+Alt+T</li></ol><h3 id="在终端中输入"><a href="#在终端中输入" class="headerlink" title="在终端中输入"></a>在终端中输入</h3><p><code>sudo passwd root</code></p><h3 id="如果想获得root权限，只需进行如下的操作"><a href="#如果想获得root权限，只需进行如下的操作" class="headerlink" title="如果想获得root权限，只需进行如下的操作"></a>如果想获得root权限，只需进行如下的操作</h3><p><code>su root</code></p><h3 id="如果要再次禁用-root-帐号，那么可以执行"><a href="#如果要再次禁用-root-帐号，那么可以执行" class="headerlink" title="如果要再次禁用 root 帐号，那么可以执行"></a>如果要再次禁用 root 帐号，那么可以执行</h3><p><code>sudo passwd -l root</code></p><h3 id="列出文件夹下的文件"><a href="#列出文件夹下的文件" class="headerlink" title="列出文件夹下的文件"></a>列出文件夹下的文件</h3><p><code>ls</code></p><h3 id="列出文件夹下的文件，包括隐藏文件"><a href="#列出文件夹下的文件，包括隐藏文件" class="headerlink" title="列出文件夹下的文件，包括隐藏文件"></a>列出文件夹下的文件，包括隐藏文件</h3><p><code>ls -a</code></p><h3 id="列出主文件夹下的包括与文件相关属性的内容信息"><a href="#列出主文件夹下的包括与文件相关属性的内容信息" class="headerlink" title="列出主文件夹下的包括与文件相关属性的内容信息"></a>列出主文件夹下的包括与文件相关属性的内容信息</h3><p><code>ls -l</code></p><h3 id="显示当前目录的绝对路径"><a href="#显示当前目录的绝对路径" class="headerlink" title="显示当前目录的绝对路径"></a>显示当前目录的绝对路径</h3><p><code>pwd</code></p><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p><code>sudo apt-get install &lt;package name&gt;</code>   </p>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ubuntu</tag>
      
      <tag>Linux</tag>
      
      <tag>Terminal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>String相关处理</title>
    <link href="/2023/12/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86/"/>
    <url>/2023/12/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><h2 id="StringStream"><a href="#StringStream" class="headerlink" title="StringStream"></a>StringStream</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sstream&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">std::stringstream sstream;<br><span class="hljs-type">int</span> nValue = <span class="hljs-number">123</span>;<br>string strValue;<br>sstream &lt;&lt; nValue;<br>sstream &gt;&gt; strValue; <span class="hljs-comment">// strValue = &quot;123&quot;</span><br></code></pre></td></tr></table></figure><h3 id="多字符串拼接"><a href="#多字符串拼接" class="headerlink" title="多字符串拼接"></a>多字符串拼接</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">std::stringstream sstream;<br>sstream &lt;&lt; <span class="hljs-string">&quot;hello&quot;</span> &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; <span class="hljs-string">&quot;world&quot;</span>;<br>sstream &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; <span class="hljs-string">&quot;!&quot;</span>;<br>std::cout &lt;&lt; sstream.<span class="hljs-built_in">str</span>() &lt;&lt; std::endl; <span class="hljs-comment">// hello world !</span><br></code></pre></td></tr></table></figure><h2 id="清空"><a href="#清空" class="headerlink" title="清空"></a>清空</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">sstream.<span class="hljs-built_in">str</span>(<span class="hljs-string">&quot;&quot;</span>);<br>sstream.<span class="hljs-built_in">clear</span>();<br><span class="hljs-comment">// 多次数据类型转换的场景下，需要使用clear()清空</span><br></code></pre></td></tr></table></figure><h1 id="c"><a href="#c" class="headerlink" title="c"></a>c</h1><h2 id="sprintf"><a href="#sprintf" class="headerlink" title="sprintf"></a>sprintf</h2><ol><li>将数字变量转换为字符串</li><li>得到整型变量的16进制和8进制字符串</li><li>连接多个字符串</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">char</span> buf[<span class="hljs-number">1024</span>];<br><span class="hljs-type">int</span> data = <span class="hljs-number">1024</span>;<br><span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;%s %d&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-number">123</span>);  <span class="hljs-comment">// hello 123</span><br><span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;%x&quot;</span>, data); <span class="hljs-comment">// 十六进制</span><br><span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;%o&quot;</span>, data); <span class="hljs-comment">// 八进制</span><br><br><span class="hljs-comment">//连接字符串</span><br><span class="hljs-built_in">sprintf</span>(buf, <span class="hljs-string">&quot;%s %s&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>); <span class="hljs-comment">// hello world</span><br></code></pre></td></tr></table></figure><h2 id="sscanf"><a href="#sscanf" class="headerlink" title="sscanf"></a>sscanf</h2><ol><li>根据格式从字符串中提取数据，如从字符串中取出整数、浮点数和字符串等</li><li>取指定长度的字符串</li><li>取到指定字符为止的字符串</li><li>取仅包含指定字符集的字符串</li><li>取到指定字符集为止的字符串</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">char</span> buf[<span class="hljs-number">15</span>] = <span class="hljs-string">&quot;123.432,432,hello&quot;</span>;<br><br><span class="hljs-comment">// 根据格式从字符串中提取数据</span><br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> d;<br><span class="hljs-type">char</span> str[<span class="hljs-number">10</span>];<br><span class="hljs-built_in">sscanf</span>(buf, <span class="hljs-string">&quot;%lf,%d,%s&quot;</span>, &amp;d, &amp;n, str); <span class="hljs-comment">// d = 123.432, n = 432, str = &quot;hello&quot;</span><br><br><span class="hljs-comment">// 取指定长度的字符串</span><br><span class="hljs-type">char</span> str[<span class="hljs-number">10</span>];<br><span class="hljs-built_in">sscanf</span>(buf, <span class="hljs-string">&quot;%10s&quot;</span>, str); <span class="hljs-comment">// str = &quot;123.432,43&quot;</span><br><br><span class="hljs-comment">// 取到指定字符为止的字符串</span><br><span class="hljs-type">char</span> str[<span class="hljs-number">10</span>];<br><span class="hljs-built_in">sscanf</span>(buf, <span class="hljs-string">&quot;%[^e]&quot;</span>, str); <span class="hljs-comment">// str = &quot;123.432,432,h&quot;</span><br><br><span class="hljs-comment">// 取仅包含指定字符集的字符串</span><br><span class="hljs-type">char</span> str[<span class="hljs-number">10</span>];<br><span class="hljs-built_in">sscanf</span>(buf, <span class="hljs-string">&quot;%[0-9.]&quot;</span>, str); <span class="hljs-comment">// str = &quot;123.432&quot; </span><br><span class="hljs-comment">// [0-9]表示0到9和.的字符集，^表示取反，即取不包含0-9.的字符集</span><br><br><span class="hljs-comment">// 取到指定字符集为止的字符串</span><br><span class="hljs-type">char</span> str[<span class="hljs-number">10</span>];<br><span class="hljs-built_in">sscanf</span>(buf, <span class="hljs-string">&quot;%[^hello]&quot;</span>, str); <span class="hljs-comment">// str = &quot;123.432,432,&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>String</tag>
      
      <tag>C</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPG</title>
    <link href="/2023/08/10/gpg/"/>
    <url>/2023/08/10/gpg/</url>
    
    <content type="html"><![CDATA[<p>GPG是一种加密方式，可以用来加密文件，也可以用来对文件进行签名，还可以用来对Git commit进行签名，以确保是密钥拥有者本人操作。这里记录一些常用指令和使用方法</p><span id="more"></span><h1 id="gpg相关指令"><a href="#gpg相关指令" class="headerlink" title="gpg相关指令"></a>gpg相关指令</h1><p>查看版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --version  // 查看gpg版本<br>gpg --<span class="hljs-built_in">help</span> // 查看帮助<br></code></pre></td></tr></table></figure><p>生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --gen-key // 用默认参数生成密钥对<br>gpg --full-generate-key // 生成密钥对(列出所有可选项)<br>gpg -a --gen-revoke [用户ID] &gt; gpg_revoke.rev // 生成撤销证书<br></code></pre></td></tr></table></figure><p>列出密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --list-secret-keys --keyid-format LONG // 列出密钥 包含keyid<br>gpg -a --<span class="hljs-built_in">export</span> [用户ID] &gt; gpg_public.pub // 导出公钥 -a表示-armor,以ASCII码输出(默认以二进制输出)<br>gpg -a --export-secret-key [用户ID] &gt; gpg_secret.sec // 导出私钥<br>gpg --import .key // 导入公钥或私钥<br></code></pre></td></tr></table></figure><p>发布密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --keyserver pool.sks-keyservers.net --send-keys [用户ID] // 发布密钥<br>gpg --keyserver pool.sks-keyservers.net --recv-keys [用户ID] // 获取密钥<br></code></pre></td></tr></table></figure><p>吊销密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --import gpg_revoke.rev // 吊销密钥<br>gpg --keyserver pool.sks-keyservers.net --send-keys [用户ID] // 更新吊销信息<br></code></pre></td></tr></table></figure><p>删除密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --delete-keys keyid // 删除公钥<br>gpg --delete-secret-keys // 删除私钥<br></code></pre></td></tr></table></figure><h1 id="gpg使用"><a href="#gpg使用" class="headerlink" title="gpg使用"></a>gpg使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg -e -r [接收者ID] -o [输出文件] [待加密文件] // 加密 -r表示recipient -e表示encrypt <br>gpg -d -u [用户ID] -o [输出文件] [加密文件] // 解密 -d表示decrypt<br>gpg -u [用户ID] -s [待签名文件] // 签名<br>gpg -u [用户ID] -r [接收者ID] -se [待签名加密文件]  // 签名加密同时进行<br>gpg --verify [待验证文件] // 验证签名<br></code></pre></td></tr></table></figure><h1 id="git中使用gpg"><a href="#git中使用gpg" class="headerlink" title="git中使用gpg"></a>git中使用gpg</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpg --list-secret-keys --keyid-format=long // 列出密钥<br>git config --global user.signingkey [主键ID] // 设置git使用的gpg密钥 主键ID即为上述命令列出的sec rsa4096/后的内容<br>git config --global commit.gpgsign <span class="hljs-literal">true</span> // 设置git提交时自动签名<br></code></pre></td></tr></table></figure><h1 id="利用-GPG-私钥对-Git-commit-进行签名"><a href="#利用-GPG-私钥对-Git-commit-进行签名" class="headerlink" title="利用 GPG 私钥对 Git commit 进行签名"></a>利用 GPG 私钥对 Git commit 进行签名</h1><p>首先，需要让 Git 知道签名所用的 GPG 密钥 ID：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.signingkey &#123;key_id&#125;<br></code></pre></td></tr></table></figure><p>然后，在每次 commit 的时候，加上<code>-S</code>参数，表示这次提交需要用 GPG 密钥进行签名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -S -m <span class="hljs-string">&quot;...&quot;</span><br></code></pre></td></tr></table></figure><p>如果觉得每次都需要手动加上<code>-S</code>有些麻烦，可以设置 Git 为每次 commit 自动要求签名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global commit.gpgsign <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>但不论是否需要手动加上<code>-S</code>，在 commit 时皆会弹出对话框，需要输入该密钥的密码，以确保是密钥拥有者本人操作<br>输入正确密码后，本次 commit 便被签名验证，push 到 Github 远程仓库后，即可显示出 Verified 绿色标记</p><h1 id="贴一些参考链接"><a href="#贴一些参考链接" class="headerlink" title="贴一些参考链接"></a>贴一些参考链接</h1><p><a href="http://ruanyifeng.com/blog/2013/07/gpg.html">http://ruanyifeng.com/blog/2013/07/gpg.html</a><br><a href="https://yexun1995.github.io/2020/09/15/GPG/">https://yexun1995.github.io/2020/09/15/GPG/</a><br><a href="https://blog.ginshio.org/2020/gpg_started_guide/">https://blog.ginshio.org/2020/gpg_started_guide/</a></p>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GPG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo</title>
    <link href="/2023/08/10/Hexo/"/>
    <url>/2023/08/10/Hexo/</url>
    
    <content type="html"><![CDATA[<p>使用Hexo搭建博客，使用Github Pages进行部署，这里记录一些常用指令和使用方法</p><span id="more"></span><h1 id="Hexo-基本使用"><a href="#Hexo-基本使用" class="headerlink" title="Hexo 基本使用"></a>Hexo 基本使用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;name&quot;</span>       <span class="hljs-comment"># 新建文章</span><br>hexo new page <span class="hljs-string">&quot;name&quot;</span>  <span class="hljs-comment"># 新建页面</span><br>hexo g                <span class="hljs-comment"># 生成页面</span><br>hexo d                <span class="hljs-comment"># 部署</span><br>hexo g -d             <span class="hljs-comment"># 生成页面并部署</span><br>hexo s                <span class="hljs-comment"># 本地预览</span><br>hexo clean            <span class="hljs-comment"># 清除缓存和已生成的静态文件</span><br>hexo <span class="hljs-built_in">help</span>             <span class="hljs-comment"># 帮助</span><br></code></pre></td></tr></table></figure><h1 id="贴一些链接"><a href="#贴一些链接" class="headerlink" title="贴一些链接"></a>贴一些链接</h1><p><a href="https://docs.github.com/en/pages/quickstart">Quickstart for GitHub Pages - GitHub Docs</a><br><a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎</a><br><a href="https://moeci.com/posts/hexo-typora/">Hexo + Typora + 开发Hexo插件 解决图片路径不一致 | yiyun’s Blog</a><br><a href="https://fluid-dev.github.io/hexo-fluid-docs/">Hexo Fluid 用户手册</a></p><h2 id="主页添加一言"><a href="#主页添加一言" class="headerlink" title="主页添加一言"></a>主页添加一言</h2><p><a href="https://hexo.fluid-dev.com/posts/fluid-hitokoto/#%E5%8F%82%E8%80%83">在 Fluid 主题首页上加入一言 - Hexo Theme Fluid</a><br><a href="https://lzy-wi.github.io/2020/09/21/fluid-add-hitokoto/">fluid主题博客主页添加一言(hitokoto)手把手教学 - Lzywi’Blog</a><br><a href="https://www.gaficat.com/posts/11640910.html">给你的fluid主题加入一言吧！ - 加菲猫的创客工坊</a></p>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Blog</tag>
      
      <tag>Github Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Conda</title>
    <link href="/2023/08/10/Conda/"/>
    <url>/2023/08/10/Conda/</url>
    
    <content type="html"><![CDATA[<p>Conda是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，是Anaconda的包管理器，也可以使用Miniconda独立安装。<br>这里记录一些常用指令和使用方法</p><span id="more"></span><p>显示版本</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">conda <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><p>在powershell中集成conda：（用于在powershell中激活虚拟环境等，实测会导致powershell冷启动速度大幅降低）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs csharp">conda <span class="hljs-keyword">init</span> powershell<br>conda <span class="hljs-keyword">init</span> --reverse <span class="hljs-meta"># 撤销</span><br></code></pre></td></tr></table></figure><p>创建虚拟环境</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">conda</span> create --name myenv python=<span class="hljs-number">3</span>.<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>激活虚拟环境</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">conda <span class="hljs-built_in">activate</span> myenv<br></code></pre></td></tr></table></figure><p>退出虚拟环境</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">conda deactivate</span><br></code></pre></td></tr></table></figure><p>查看虚拟环境</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">conda</span> <span class="hljs-literal">info</span> --envs<br>conda env list<br></code></pre></td></tr></table></figure><p>删除虚拟环境</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">conda <span class="hljs-built_in">remove</span> <span class="hljs-comment">--name myenv </span><br></code></pre></td></tr></table></figure><p>安装包</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">conda <span class="hljs-keyword">install</span> numpy<br>conda <span class="hljs-keyword">install</span> numpy=<span class="hljs-number">1.10</span><br>conda <span class="hljs-keyword">install</span> --<span class="hljs-keyword">file</span> requirements.txt<br></code></pre></td></tr></table></figure><p>增加conda-forge源</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">conda<span class="hljs-built_in"> config </span>--<span class="hljs-built_in">add</span> channels conda-forge<br></code></pre></td></tr></table></figure><p>将新的环境添加到jupyter中<br>安装ipykernel</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">conda <span class="hljs-keyword">install</span> ipykernel<br></code></pre></td></tr></table></figure><p>将环境写入notebook的kernel中</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">python -m  ipykernel install --<span class="hljs-keyword">user</span> <span class="hljs-title">--name</span> test<br></code></pre></td></tr></table></figure><p>删除kernel</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">jupyter kernelspec <span class="hljs-keyword">remove</span> <span class="hljs-keyword">test</span> <br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">conda <span class="hljs-params">--version</span> <span class="hljs-string">//</span>显示版本<br>conda update conda <span class="hljs-string">//</span>更新conda<br>conda update anaconda <span class="hljs-string">//</span>更新anaconda<br>conda info <span class="hljs-params">--envs</span> <span class="hljs-string">//</span>查看环境<br>activate &lt;env_name&gt; <span class="hljs-string">//</span>激活环境 <br>conda deactivate <span class="hljs-string">//</span>退出环境<br>conda create <span class="hljs-params">--name</span> &lt;env_name&gt; &lt;package_names&gt; <span class="hljs-string">//</span>创建环境<br>conda create <span class="hljs-params">--name</span> &lt;env_name&gt; python=3.6 <span class="hljs-string">//</span>创建环境举例<br>conda env remove <span class="hljs-params">--name</span> &lt;env_name&gt; <span class="hljs-params">--all</span> <span class="hljs-string">//</span>删除环境<br>conda env remove -p &lt;env_path&gt; <span class="hljs-string">//</span>删除环境<br>conda remove -n ML <span class="hljs-params">--all</span> <span class="hljs-string">///</span>删除环境<br><br>conda create <span class="hljs-params">--name</span> &lt;new_env_name&gt; <span class="hljs-params">--clone</span> &lt;copied_env_name&gt; <span class="hljs-string">//</span>复制环境<br>conda search <span class="hljs-params">--full-name</span> &lt;package_full_name&gt;  <span class="hljs-string">//</span>精准搜索<br>conda search &lt;text&gt; <span class="hljs-string">//</span>模糊搜索<br>conda install &lt;package_name&gt; <span class="hljs-string">//</span>安装包<br>conda install &lt;package_name&gt;=&lt;<span class="hljs-keyword">version</span>&gt; <span class="hljs-string">//</span>安装指定版本的包<br>conda install <span class="hljs-params">--name</span> &lt;env_name&gt; &lt;package_name&gt; <span class="hljs-string">//</span>安装包到指定环境<br><br>pip install &lt;package_name&gt; <span class="hljs-string">//</span>安装包,当使用 conda install 无法进行安装时，可以使用pip进行安装<br><span class="hljs-string">//</span>在指定环境中使用pip进行安装包，则需要先切换到指定环境中，再使用pip命令安装包。<br><br>conda list <span class="hljs-string">//</span>查看已安装的包<br>conda list <span class="hljs-params">--name</span> &lt;env_name&gt; <span class="hljs-string">//</span>查看指定环境中已安装的包<br>conda list <span class="hljs-params">--export</span> &gt; &lt;file_name&gt;<span class="hljs-string">.txt</span> <span class="hljs-string">//</span>导出已安装的包<br>conda list <span class="hljs-params">--name</span> &lt;env_name&gt; <span class="hljs-params">--export</span> &gt; &lt;file_name&gt;<span class="hljs-string">.txt</span> <span class="hljs-string">//</span>导出指定环境中已安装的包<br>conda install <span class="hljs-params">--file</span> &lt;file_name&gt;<span class="hljs-string">.txt</span> <span class="hljs-string">//</span>安装已导出的包<br>conda install <span class="hljs-params">--name</span> &lt;env_name&gt; <span class="hljs-params">--file</span> &lt;file_name&gt;<span class="hljs-string">.txt</span> <span class="hljs-string">//</span>安装已导出的包到指定环境<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Conda</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git</title>
    <link href="/2023/08/09/git/"/>
    <url>/2023/08/09/git/</url>
    
    <content type="html"><![CDATA[<p>Git是一种分布式版本控制系统，下面记录一些常用指令和使用方法</p><span id="more"></span><h1 id="git-基本用法"><a href="#git-基本用法" class="headerlink" title="git 基本用法"></a>git 基本用法</h1><ul><li>进入要管理的文件夹</li><li>执行初始化命令<br><code>git init</code></li><li>管理目录下的文件状态<br><code>git status</code><br>注：新增的文件和修改过后的文件都是红色</li><li>管理指定文件（红变绿）<br><code>git add 文件名</code><br><code>git add .</code><br><code>git add -a</code><br><code>git add --all</code></li><li>个人信息配置：用户名、邮箱【一次即可】<br><code>git config --global user.email &quot;Your email&quot;</code><br><code>git config --global user.name &quot;Your Name&quot;</code></li><li>生成版本<br><code>git commit -m &#39;描述信息&#39;</code></li><li>查看版本记录<br><code>git log</code></li></ul><h1 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">//报错信息 <br>//error: pathspec <span class="hljs-string">&#x27;XXX&#x27;</span> did not match any file(s) known to git<br><br>git branch //查看本地分支<br>git branch -a //查看所有分支<br>git fetch //获取远程分支<br>git checkout -b &lt;branch_name&gt; origin/&lt;branch_name&gt; //创建本地分支<br>git branch -d &lt;branch_name&gt; //删除本地分支<br><br>git <span class="hljs-built_in">clone</span> &lt;url&gt; //克隆项目<br>git <span class="hljs-built_in">clone</span> -b &lt;branch_name&gt; &lt;url&gt; //克隆指定分支的项目<br><br>git merge //合并分支<br>git merge &lt;branch_name&gt; //合并分支<br></code></pre></td></tr></table></figure><h3 id="Uncommitted-changes"><a href="#Uncommitted-changes" class="headerlink" title="Uncommitted changes"></a>Uncommitted changes</h3><p>Uncommitted changes, however (even staged), will be lost. Make sure to stash and commit anything you need. For that you can run the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git stash<br></code></pre></td></tr></table></figure><p>And then to reapply these uncommitted changes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git stash pop<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>Version Control</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
